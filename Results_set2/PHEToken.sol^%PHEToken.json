{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "Transaction-Order-Dependence(TOD)": true, 
  "integer_overflow": [
   "/oyente/oyente/test/ContractCodeBalance/PHEToken.sol:130:9: Warning: Integer Overflow.\n        Approval(msg.sender, _spender, _value)", 
   "/oyente/oyente/test/ContractCodeBalance/PHEToken.sol:143:5: Warning: Integer Overflow.\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns(bool) {\n    ^\nSpanning multiple lines.", 
   "/oyente/oyente/test/ContractCodeBalance/PHEToken.sol:146:13: Warning: Integer Overflow.\n            spender.receiveApproval(msg.sender, _value, this, _extraData)"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "/oyente/oyente/test/ContractCodeBalance/PHEToken.sol:130:9: Warning: Integer Underflow.\n        Approval(msg.sender, _spender, _value)", 
   "/oyente/oyente/test/ContractCodeBalance/PHEToken.sol:162:9: Warning: Integer Underflow.\n        totalSupply -= _value\nInteger Underflow occurs if:\n    totalSupply = 0\n    balances[msg.sender] = 57896044618658097711785492504343953926634992332820282019728792003956564819968", 
   "/oyente/oyente/test/ContractCodeBalance/PHEToken.sol:180:9: Warning: Integer Underflow.\n        totalSupply -= _value\nInteger Underflow occurs if:\n    balances[_from] = 57896044618658097711785492504343953926634992332820282019728792003956564819968\n    allowances[_from][msg.sender] = 57896044618658097711785492504343953926634992332820282019728792003956564819968\n    totalSupply = 0"
  ], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "66.5"
}