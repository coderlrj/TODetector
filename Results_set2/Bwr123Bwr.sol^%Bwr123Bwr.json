{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "Transaction-Order-Dependence(TOD)": true, 
  "integer_overflow": [
   "/oyente/oyente/test/ContractCodeBalance/Bwr123Bwr.sol:202:9: Warning: Integer Overflow.\n        function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\n        ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    data = 115792089237316195423570985008687907853269984665640564039457584007913129639932", 
   "/oyente/oyente/test/ContractCodeBalance/Bwr123Bwr.sol:205:13: Warning: Integer Overflow.\n            ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data)", 
   "/oyente/oyente/test/ContractCodeBalance/Bwr123Bwr.sol:204:18: Warning: Integer Overflow.\n            emit Approval(msg.sender, spender, tokens)"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "/oyente/oyente/test/ContractCodeBalance/Bwr123Bwr.sol:204:18: Warning: Integer Underflow.\n            emit Approval(msg.sender, spender, tokens)"
  ], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "66.6"
}