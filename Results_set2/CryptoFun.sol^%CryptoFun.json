{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "Transaction-Order-Dependence(TOD)": [], 
  "integer_overflow": [
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:490:1: Warning: Integer Overflow.\nm_investors.disqalify2(addr)\nInteger Overflow occurs if:\n    owner = 0", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:611:1: Warning: Integer Overflow.\nrequire(investment >= minInvesment, \"investment must be >= minInvesment\")", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:681:39: Warning: Integer Overflow.\n(uint investment, uint paymentTime) = m_investors.investorInfo(investorAddr)", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:482:10: Warning: Integer Overflow.\ndoInvest(msg.data.toAddress", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:559:1: Warning: Integer Overflow.\nfunction investorInfo(address investorAddr)public view returns(uint investment, uint paymentTime, bool isReferral) {\n^\nSpanning multiple lines.", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:464:1: Warning: Integer Overflow.\nrequire(msg.sender.isNotContract(), \"only externally accounts\")", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:612:1: Warning: Integer Overflow.\nrequire(address(this).balance <= maxBalance, \"the contract eth balance limit\")", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:486:1: Warning: Integer Overflow.\nm_investors.disqalify(addr)\nInteger Overflow occurs if:\n    owner = 0", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:542:8: Warning: Integer Overflow.\nreturn m_investors.size()", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:560:29: Warning: Integer Overflow.\n(investment, paymentTime) = m_investors.investorInfo(investorAddr)"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:244:1: Warning: Integer Underflow.\nrequire(msg.sender == owner, \"access denied\")\nInteger Underflow occurs if:\n    owner = 0", 
   "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:612:1: Warning: Integer Underflow.\nrequire(address(this).balance <= maxBalance, \"the contract eth balance limit\")"
  ], 
  "money_concurrency": [
   [
    "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:254:5: Warning: Transaction-Ordering Dependency.\n    selfdestruct(owner)"
   ], 
   [
    "/oyente/oyente/test/ContractCodeBalance/CryptoFun.sol:605:1: Warning: Transaction-Ordering Dependency.\ninvestorAddr.transfer(investment)"
   ]
  ], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "45.2"
}