{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:169:9: Warning: Re-Entrancy Vulnerability.\n        usi.ethToTokenSwapInput.value(ethBack)(1, block.timestamp)", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:209:17: Warning: Re-Entrancy Vulnerability.\n                usi2.ethToTokenSwapInput.value(ethBack)(1, block.timestamp)", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:129:26: Warning: Re-Entrancy Vulnerability.\n       uint destAmount = proxy.tradeWithHint.value(ethAmt)(ETH_TOKEN_ADDRESS, ethAmt, token, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000000, PERM_HINT)"
  ], 
  "Transaction-Order-Dependence(TOD)": [], 
  "integer_overflow": [
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:209:17: Warning: Integer Overflow.\n                usi2.ethToTokenSwapInput.value(ethBack)(1, block.timestamp)\nInteger Overflow occurs if:\n    saiAddress = 1\n    owner = 0\n    toExch = 0\n    daiAddress = 0\n    fromAddress = 0\n    toAddress = 0\n    fromExch = 0", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:242:23: Warning: Integer Overflow.\n        (, minRate) = proxy.getExpectedRate(ETH_TOKEN_ADDRESS, token, amount)", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:129:26: Warning: Integer Overflow.\n       uint destAmount = proxy.tradeWithHint.value(ethAmt)(ETH_TOKEN_ADDRESS, ethAmt, token, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000000, PERM_HINT)\nInteger Overflow occurs if:\n    uniSwapContract = 0\n    proxy.tradeWithHint.value(ethAmt)(ETH_TOKEN_ADDRESS, ethAmt, token, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000000, PERM_HINT) = 115792089237316195423570985008687907853269984665640562830531764393283954933759\n    uniswapSai = 1\n    owner = 0\n    uniswapDai = 0", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:230:10: Warning: Integer Overflow.\n         saiToken.transfer(msg.sender, currentSaiBalance)\nInteger Overflow occurs if:\n    owner = 0", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:240:6: Warning: Integer Overflow.\n     function getKyberExpectedRate(ERC20 token, uint256 amount) public view returns (uint256){\n     ^\nSpanning multiple lines.", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:236:34: Warning: Integer Overflow.\n        uint256 currentBalance = token.balanceOf(this)"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:151:26: Warning: Integer Underflow.\n       uint destAmount = proxy.tradeWithHint(token, tokenQty, ETH_TOKEN_ADDRESS, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000004, PERM_HINT)\nInteger Underflow occurs if:\n    owner = 0\n    proxy.tradeWithHint(token, tokenQty, ETH_TOKEN_ADDRESS, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000004, PERM_HINT) = 1", 
   "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:129:26: Warning: Integer Underflow.\n       uint destAmount = proxy.tradeWithHint.value(ethAmt)(ETH_TOKEN_ADDRESS, ethAmt, token, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000000, PERM_HINT)\nInteger Underflow occurs if:\n    uniSwapContract = 0\n    proxy.tradeWithHint.value(ethAmt)(ETH_TOKEN_ADDRESS, ethAmt, token, this, MAX_QTY, 0, 0x0000000000000000000000000000000000000000, PERM_HINT) = 1\n    uniswapSai = 1\n    owner = 0\n    uniswapDai = 0"
  ], 
  "money_concurrency": [
   [
    "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:222:10: Warning: Transaction-Ordering Dependency.\n         msg.sender.transfer(address(this).balance)"
   ], 
   [
    "/oyente/oyente/test/ContractCodeBalance/Trader__57.sol:169:9: Warning: Transaction-Ordering Dependency.\n        usi.ethToTokenSwapInput.value(ethBack)(1, block.timestamp)"
   ]
  ], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "91.4"
}